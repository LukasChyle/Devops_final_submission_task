name: setup-build-test build-push-image

on:
  push:
    branches:
      - ignore master
  pull_request:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  setup_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set execute permissions on gradlew
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: ./gradlew build

      - name: Test with Gradle
        run: ./gradlew test

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-jar
          path: build/libs/Devops_final_submission_task-0.0.1-SNAPSHOT.jar

  docker_build_and_push:
    needs: setup_and_build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download app jar
        uses: actions/download-artifact@v2
        with:
          name: app-jar
          path: build/libs/
          
      - name: Setup Docker
        run: |
          sudo systemctl start docker
          docker --version
          
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  fake_deploy:
    needs: docker_build_and_push
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "Deploying image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest to test environment"'
